# Copyright 2018 Juniper Networks, Inc. All rights reserved.
# Licensed under the Juniper Networks Script Software License (the "License").
# You may not use this script file except in compliance with the License, which is located at
# http://www.juniper.net/support/legal/scriptlicense/
# Unless required by applicable law or otherwise agreed to in writing by the parties,
# software distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#
#
# Common values shared among group of nodes
ipmi_hardware1: &hardware1
  pm_type: "ipmi"
  {% raw -%}
  pm_user: "{{ vault['inventory_nodes']['hardware1']['pm_user'] }}"
  pm_password: "{{ vault['inventory_nodes']['hardware1']['pm_password'] }}"
  {% endraw -%}
#Could use uefi boot mode by uncommenting below line, but not needed for mule
#capabilities: "boot_mode:uefi"

# List of baremetal server nodes that can be used for the deploying roles
# Each list item contains:
#    name: logical name to assign this resource (string)
#    pm_addr: IP address for resourceIPMI interface (string)
#    pm_type: Ironic driver to interface with this resource (typically ipmi) (string)
#    pm_user: IPMI user account (string)
#    pm_password: IPMI account user password (string)
#    capabilities: String of comma separated list of node capabilities.
#                  Capabilities 'profile' and 'boot_option' are managed
#                  by Contrail Cloud and will be omitted. (string)
#                  e.g capabilities: "boot_mode:uefi" set boot mode to uefi
# 
# Some values common for nodes can be moved to dedicated section like ipmi_hardware1
# and be referred like this:

{% set control_host_count = namespace(value=0) %}
{% set compute_kernel_count = namespace(value=0) %}
{% set compute_dpdk_count = namespace(value=0) %}
{% set storage_count = namespace(value=0) %}

inventory_nodes:
{% for item in controlhost %}
  - name: "{{ 'controlhost' + control_host_count.value|string }}"
    pm_addr: "{{ item.IPMI }}"
    <<: *hardware1
    mac:
    - "{{ item.cc_prov_mac10g2 }}"
{% set control_host_count.value =  control_host_count.value + 1 %}
{% endfor %}
{% if kernelcompute is defined %}
{% for item in kernelcompute %}
  - name: "{{ 'computekernel' + compute_kernel_count.value|string }}"
    pm_addr: "{{ item.IPMI }}"
    <<: *hardware1
    mac:
    - "{{ item.cc_prov_mac10g2 }}"
{% set compute_kernel_count.value =  compute_kernel_count.value + 1 %}
{% endfor %}
{% endif %}
{% if dpdkcompute is defined %}
{% for item in dpdkcompute %}
  - name: "{{ 'computedpdk' + compute_dpdk_count.value|string }}"
    pm_addr: "{{ item.IPMI }}"
    <<: *hardware1
    mac:
    - "{{ item.cc_prov_mac10g2 }}"
{% set compute_dpdk_count.value =  compute_dpdk_count.value + 1 %}
{% endfor %}
{% endif %}
{#
{% for item in storage %}
  - name: "{{ 'storage' + storage_count.value|string }}"
    pm_addr: "{{ item.IPMI }}"
    <<: *hardware1
    mac:
    - {{ item.cc_prov_mac10g2 }}
{% set storage_count.value =  storage_count.value + 1 %}
{% endfor %}
#}
